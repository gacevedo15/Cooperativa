#BlueJ class context
comment0.target=Logistica
comment0.text=\r\n\ La\ clase\ Logistica\ se\ encarga\ de\ calcular\ el\ costo\ total\ de\ la\ log\u00EDstica\ para\ un\ producto\ y\ un\ cliente\ dados,\r\n\ considerando\ la\ cantidad\ comprada.\ El\ costo\ se\ divide\ en\ tramos\ de\ gran\ log\u00EDstica\ y\ peque\u00F1a\ log\u00EDstica.\r\n\ @author\ Gustavo\ Acevedo\ Alfonso\r\n\ @version\ 1.0\r\n
comment1.params=c\ p\ ofertaLogistica
comment1.target=Logistica(Cliente,\ Producto,\ OfertaLogistica)
comment1.text=\r\n\ Constructor\ que\ crea\ una\ instancia\ de\ Logistica\ con\ la\ informaci\u00F3n\ de\ un\ cliente,\ un\ producto\ y\ una\ oferta\ log\u00EDstica.\r\n\ @param\ c\ Cliente\ que\ realizar\u00E1\ el\ pedido.\r\n\ @param\ p\ Producto\ que\ se\ va\ a\ transportar.\r\n\ @param\ ofertaLogistica\ Oferta\ log\u00EDstica\ que\ se\ aplicar\u00E1\ al\ transporte\ del\ producto.\r\n
comment2.params=
comment2.target=float\ getCosteTotalPequenaLogistica()
comment2.text=\r\n\ Devuelve\ el\ coste\ total\ de\ la\ peque\u00F1a\ log\u00EDstica.\r\n\ @return\ Coste\ total\ de\ la\ peque\u00F1a\ log\u00EDstica.\r\n
comment3.params=
comment3.target=float\ getCosteTotalGranLogistica()
comment3.text=\r\n\ Devuelve\ el\ coste\ total\ de\ la\ gran\ log\u00EDstica.\r\n\ @return\ Coste\ total\ de\ la\ gran\ log\u00EDstica.\r\n
comment4.params=distancia\ esPerecedero
comment4.target=java.util.ArrayList\ crearTramos(float,\ boolean)
comment4.text=\r\n\ Crea\ una\ lista\ de\ tramos\ en\ funci\u00F3n\ de\ la\ distancia\ y\ si\ el\ producto\ es\ perecedero\ o\ no.\r\n\ Si\ el\ producto\ es\ perecedero\ y\ la\ distancia\ es\ menor\ o\ igual\ a\ 100\ km,\ se\ crea\ un\ tramo\ de\ peque\u00F1a\ log\u00EDstica\r\n\ con\ la\ distancia\ dada.\r\n\ Si\ el\ producto\ es\ perecedero\ y\ la\ distancia\ es\ mayor\ a\ 100\ km,\ se\ crea\ un\ tramo\ de\ gran\ log\u00EDstica\ con\ la\r\n\ distancia\ total\ menos\ 100\ km\ y\ un\ tramo\ de\ peque\u00F1a\ log\u00EDstica\ con\ 100\ km.\r\n\ Si\ el\ producto\ es\ no\ perecedero,\ se\ crean\ tramos\ de\ gran\ log\u00EDstica\ de\ 50\ km\ hasta\ el\ pen\u00FAltimo\ tramo\ y\r\n\ un\ tramo\ de\ peque\u00F1a\ log\u00EDstica\ con\ la\ distancia\ restante.\r\n\ @param\ distancia\ La\ distancia\ total\ a\ recorrer\ en\ km.\r\n\ @param\ esPerecedero\ Indica\ si\ el\ producto\ es\ perecedero\ o\ no.\r\n\ @return\ Una\ lista\ de\ tramos\ creada\ en\ funci\u00F3n\ de\ los\ par\u00E1metros\ dados.\r\n
comment5.params=
comment5.target=void\ mostrarTramos()
comment5.text=\r\n\ Muestra\ los\ tramos\ de\ log\u00EDstica.\r\n\ Imprime\ la\ distancia\ y\ el\ tipo\ de\ log\u00EDstica\ de\ cada\ tramo.\r\n
comment6.params=p\ c\ cantidadComprada
comment6.target=float\ calcularCosteLogistica(Producto,\ Cliente,\ float)
comment6.text=\r\n\ Calcula\ el\ coste\ de\ la\ log\u00EDstica\ para\ un\ producto\ y\ un\ cliente\ dados,\ en\ funci\u00F3n\ de\ la\ cantidad\ comprada.\r\n\ @param\ p\ Producto\ comprado\ por\ el\ cliente\r\n\ @param\ c\ Cliente\ que\ realiza\ la\ compra\r\n\ @param\ cantidadComprada\ Cantidad\ de\ producto\ comprada\ por\ el\ cliente\r\n\ @return\ El\ coste\ total\ de\ la\ log\u00EDstica\ para\ la\ compra\ realizada\ por\ el\ cliente\r\n
numComments=7
